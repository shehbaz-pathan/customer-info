apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Release.Name }}-web-frontend-argo-rollout
  labels:
   {{- include "web-frontend_labels" . | indent 4 }}
spec:
  replicas: {{ .Values.rolloutSpecs.replicaCount }}
  selector:
    matchLabels:
      {{- include "web-frontend_labels" . | indent 6 }}
  revisionHistoryLimit: {{ .Values.rolloutSpecs.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        {{- include "web-frontend_labels" . | indent 8 }}
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - image: {{ .Values.image.webFrontend.registry }}/{{ .Values.image.webFrontend.name }}:{{ .Values.image.webFrontend.tag }}
          imagePullPolicy: Always
          name: web
          ports:
            - containerPort: 8080
          env:
            - name: CUSTOMER_SERVICE_URL
              value: "http://{{ .Release.Name }}-customers.{{ .Release.Namespace}}.svc.cluster.local"
            - name: NAME
              valueFrom:
                secretKeyRef:
                   name: {{ .Release.Name }}-secret
                   key: NAME
  strategy:
    canary:
      #      canaryService: customers-canary
      #      stableService: customers-stable
      trafficRouting:
        istio:
          virtualService:
            name: {{ .Release.Name }}-webfrontend-vs
            routes:
              - default
          destinationRule:
            name: {{ .Release.Name }}-webfrontend-dr
            canarySubsetName: canary
            stableSubsetName: stable
      steps:
        - setWeight: 20
        - pause:
            duration: 1m
        - setWeight: 30
        - pause:
            duration: 1m
        - setWeight: 50
        - pause:
            duration: 1m
      analysis:
        templates:
          - templateName: success-rate
        startingStep: 2
        args:
          - name: service-name
            value: {{ .Release.Name }}-web-frontend.{{ .Release.Namespace }}.svc.cluster.local
